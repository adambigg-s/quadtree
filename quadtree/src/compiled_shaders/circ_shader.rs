#![allow(dead_code)]
use sokol::gfx as sg;
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc -i ./src/shaders/circ_shader.glsl -o ./src/compiled_shaders/circ_shader.rs --slang hlsl5:wgsl:glsl430 -f sokol_rust

    Overview:
    =========
    Shader program: 'circle':
        Get shader desc: circle_shader_desc(sg::query_backend());
        Vertex Shader: circle_vs
        Fragment Shader: circle_fs
        Attributes:
            ATTR_CIRCLE_V_POS => 0
            ATTR_CIRCLE_I_CENTER => 1
            ATTR_CIRCLE_I_RADIUS => 2
            ATTR_CIRCLE_I_COLOR => 3
    Bindings:
        Uniform block 'v_params_world':
            Rust struct: VParamsWorld
            Bind slot: UB_V_PARAMS_WORLD => 1
*/
pub const ATTR_CIRCLE_V_POS: usize = 0;
pub const ATTR_CIRCLE_I_CENTER: usize = 1;
pub const ATTR_CIRCLE_I_RADIUS: usize = 2;
pub const ATTR_CIRCLE_I_COLOR: usize = 3;
pub const UB_V_PARAMS_WORLD: usize = 1;
#[repr(C, align(16))]
pub struct VParamsWorld {
    pub world_dims: [f32; 2],
    pub _pad_8: [u8; 8],
}
/*
    #version 430

    uniform vec4 v_params_world[1];
    layout(location = 1) out vec3 f_color;
    layout(location = 3) in vec3 i_color;
    layout(location = 0) out vec2 f_pos;
    layout(location = 0) in vec2 v_pos;
    layout(location = 1) in vec2 i_center;
    layout(location = 2) in float i_radius;

    void main()
    {
        f_color = i_color;
        f_pos = v_pos;
        gl_Position = vec4(fma(v_pos, (vec2(i_radius) / v_params_world[0].xy) * 2.0, ((i_center / v_params_world[0].xy) * 2.0) - vec2(1.0)), 0.0, 1.0);
    }

*/
pub const CIRCLE_VS_SOURCE_GLSL430: [u8; 484] = [
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5b,0x31,0x5d,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x66,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,
    0x33,0x20,0x69,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,
    0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x5f,0x70,0x6f,0x73,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x5f,0x70,
    0x6f,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,
    0x20,0x69,0x5f,0x63,0x65,0x6e,0x74,0x65,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,
    0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x69,0x5f,0x72,0x61,0x64,0x69,0x75,
    0x73,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,
    0x69,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x5f,0x70,
    0x6f,0x73,0x20,0x3d,0x20,0x76,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x34,0x28,0x66,0x6d,0x61,0x28,0x76,0x5f,0x70,0x6f,0x73,0x2c,0x20,0x28,0x76,
    0x65,0x63,0x32,0x28,0x69,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x29,0x20,0x2f,0x20,
    0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5b,0x30,
    0x5d,0x2e,0x78,0x79,0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,0x2c,0x20,0x28,0x28,0x69,
    0x5f,0x63,0x65,0x6e,0x74,0x65,0x72,0x20,0x2f,0x20,0x76,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x29,0x20,
    0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,
    0x30,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x00,
];
/*
    #version 430

    layout(location = 0) in vec2 f_pos;
    layout(location = 0) out vec4 color;
    layout(location = 1) in vec3 f_color;

    void main()
    {
        if (length(f_pos) > 1.0)
        {
            discard;
        }
        color = vec4(f_color, 0.89999997615814208984375);
    }

*/
pub const CIRCLE_FS_SOURCE_GLSL430: [u8; 256] = [
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x5f,0x70,0x6f,0x73,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x33,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x66,0x20,0x28,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x66,0x5f,0x70,0x6f,0x73,
    0x29,0x20,0x3e,0x20,0x31,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,
    0x30,0x2e,0x38,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x36,0x31,0x35,0x38,0x31,0x34,
    0x32,0x30,0x38,0x39,0x38,0x34,0x33,0x37,0x35,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,

];
/*
    cbuffer v_params_world : register(b0)
    {
        float2 _25_world_dims : packoffset(c0);
    };


    static float4 gl_Position;
    static float3 f_color;
    static float3 i_color;
    static float2 f_pos;
    static float2 v_pos;
    static float2 i_center;
    static float i_radius;

    struct SPIRV_Cross_Input
    {
        float2 v_pos : TEXCOORD0;
        float2 i_center : TEXCOORD1;
        float i_radius : TEXCOORD2;
        float3 i_color : TEXCOORD3;
    };

    struct SPIRV_Cross_Output
    {
        float2 f_pos : TEXCOORD0;
        float3 f_color : TEXCOORD1;
        float4 gl_Position : SV_Position;
    };

    void vert_main()
    {
        f_color = i_color;
        f_pos = v_pos;
        gl_Position = float4(mad(v_pos, (i_radius.xx / _25_world_dims) * 2.0f, ((i_center / _25_world_dims) * 2.0f) - 1.0f.xx), 0.0f, 1.0f);
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        i_color = stage_input.i_color;
        v_pos = stage_input.v_pos;
        i_center = stage_input.i_center;
        i_radius = stage_input.i_radius;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.f_color = f_color;
        stage_output.f_pos = f_pos;
        return stage_output;
    }
*/
pub const CIRCLE_VS_SOURCE_HLSL5: [u8; 1134] = [
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5f,0x77,0x6f,0x72,0x6c,0x64,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,
    0x72,0x28,0x62,0x30,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x20,0x5f,0x32,0x35,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x64,0x69,0x6d,
    0x73,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,
    0x30,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,
    0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x69,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x66,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x20,0x76,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x69,0x5f,0x63,0x65,0x6e,0x74,
    0x65,0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x69,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,
    0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,
    0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x76,0x5f,0x70,0x6f,0x73,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,
    0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x69,0x5f,0x63,0x65,0x6e,0x74,0x65,0x72,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,
    0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x69,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,
    0x4f,0x52,0x44,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x69,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,
    0x4f,0x52,0x44,0x33,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,
    0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,
    0x20,0x66,0x5f,0x70,0x6f,0x73,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,
    0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,
    0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x53,0x56,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x69,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x5f,0x70,0x6f,
    0x73,0x20,0x3d,0x20,0x76,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x28,0x6d,0x61,0x64,0x28,0x76,0x5f,0x70,0x6f,0x73,0x2c,0x20,0x28,
    0x69,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x2e,0x78,0x78,0x20,0x2f,0x20,0x5f,0x32,
    0x35,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x64,0x69,0x6d,0x73,0x29,0x20,0x2a,0x20,
    0x32,0x2e,0x30,0x66,0x2c,0x20,0x28,0x28,0x69,0x5f,0x63,0x65,0x6e,0x74,0x65,0x72,
    0x20,0x2f,0x20,0x5f,0x32,0x35,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x64,0x69,0x6d,
    0x73,0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,0x66,0x29,0x20,0x2d,0x20,0x31,0x2e,0x30,
    0x66,0x2e,0x78,0x78,0x29,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,
    0x66,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x69,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x70,0x6f,0x73,0x20,0x3d,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x76,0x5f,0x70,0x6f,0x73,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x5f,0x63,0x65,0x6e,0x74,0x65,0x72,0x20,0x3d,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x69,0x5f,0x63,
    0x65,0x6e,0x74,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x5f,0x72,0x61,0x64,
    0x69,0x75,0x73,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,
    0x74,0x2e,0x69,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,
    0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,
    0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x66,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,
    0x75,0x74,0x2e,0x66,0x5f,0x70,0x6f,0x73,0x20,0x3d,0x20,0x66,0x5f,0x70,0x6f,0x73,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
];
/*
    static float2 f_pos;
    static float4 color;
    static float3 f_color;

    struct SPIRV_Cross_Input
    {
        float2 f_pos : TEXCOORD0;
        float3 f_color : TEXCOORD1;
    };

    struct SPIRV_Cross_Output
    {
        float4 color : SV_Target0;
    };

    void frag_main()
    {
        if (length(f_pos) > 1.0f)
        {
            discard;
        }
        color = float4(f_color, 0.89999997615814208984375f);
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        f_pos = stage_input.f_pos;
        f_color = stage_input.f_color;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.color = color;
        return stage_output;
    }
*/
pub const CIRCLE_FS_SOURCE_HLSL5: [u8; 597] = [
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x66,0x5f,
    0x70,0x6f,0x73,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,
    0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x66,0x5f,0x70,0x6f,0x73,0x20,0x3a,0x20,
    0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,
    0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,
    0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x53,0x56,
    0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x30,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,
    0x66,0x5f,0x70,0x6f,0x73,0x29,0x20,0x3e,0x20,0x31,0x2e,0x30,0x66,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x69,0x73,
    0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x66,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x30,0x2e,0x38,0x39,0x39,0x39,0x39,0x39,
    0x39,0x37,0x36,0x31,0x35,0x38,0x31,0x34,0x32,0x30,0x38,0x39,0x38,0x34,0x33,0x37,
    0x35,0x66,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,
    0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,
    0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,
    0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x5f,0x70,0x6f,0x73,0x20,0x3d,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x66,0x5f,0x70,0x6f,0x73,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x66,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,
    0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,
    0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,
    0x3b,0x0a,0x7d,0x0a,0x00,
];
/*
    diagnostic(off, derivative_uniformity);

    struct v_params_world {
      /_ @offset(0) _/
      world_dims : vec2f,
    }

    var<private> f_color : vec3f;

    var<private> i_color : vec3f;

    var<private> f_pos : vec2f;

    var<private> v_pos : vec2f;

    var<private> i_center : vec2f;

    @group(0) @binding(0) var<uniform> x_25 : v_params_world;

    var<private> i_radius : f32;

    var<private> gl_Position : vec4f;

    fn main_1() {
      var ndc_center : vec2f;
      var ndc_radius : vec2f;
      var pos : vec2f;
      let x_12 : vec3f = i_color;
      f_color = x_12;
      let x_18 : vec2f = v_pos;
      f_pos = x_18;
      let x_22 : vec2f = i_center;
      let x_30 : vec2f = x_25.world_dims;
      ndc_center = (((x_22 / x_30) * 2.0f) - vec2f(1.0f, 1.0f));
      let x_40 : f32 = i_radius;
      let x_42 : vec2f = x_25.world_dims;
      ndc_radius = ((vec2f(x_40, x_40) / x_42) * 2.0f);
      let x_47 : vec2f = ndc_center;
      let x_48 : vec2f = v_pos;
      let x_49 : vec2f = ndc_radius;
      pos = (x_47 + (x_48 * x_49));
      let x_59 : vec2f = pos;
      gl_Position = vec4f(x_59.x, x_59.y, 0.0f, 1.0f);
      return;
    }

    struct main_out {
      @location(1)
      f_color_1 : vec3f,
      @location(0)
      f_pos_1 : vec2f,
      @builtin(position)
      gl_Position : vec4f,
    }

    @vertex
    fn main(@location(3) i_color_param : vec3f, @location(0) v_pos_param : vec2f, @location(1) i_center_param : vec2f, @location(2) i_radius_param : f32) -> main_out {
      i_color = i_color_param;
      v_pos = v_pos_param;
      i_center = i_center_param;
      i_radius = i_radius_param;
      main_1();
      return main_out(f_color, f_pos, gl_Position);
    }

*/
pub const CIRCLE_VS_SOURCE_WGSL: [u8; 1506] = [
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x20,0x7b,
    0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x30,0x29,
    0x20,0x2a,0x2f,0x0a,0x20,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x64,0x69,0x6d,0x73,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x2c,0x0a,0x7d,0x0a,0x0a,0x76,0x61,0x72,
    0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,
    0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x69,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,
    0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x5f,0x70,0x6f,0x73,0x20,0x3a,0x20,
    0x76,0x65,0x63,0x32,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,
    0x61,0x74,0x65,0x3e,0x20,0x76,0x5f,0x70,0x6f,0x73,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x32,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,
    0x3e,0x20,0x69,0x5f,0x63,0x65,0x6e,0x74,0x65,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x32,0x66,0x3b,0x0a,0x0a,0x40,0x67,0x72,0x6f,0x75,0x70,0x28,0x30,0x29,0x20,0x40,
    0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x30,0x29,0x20,0x76,0x61,0x72,0x3c,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x3e,0x20,0x78,0x5f,0x32,0x35,0x20,0x3a,0x20,0x76,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x3b,0x0a,0x0a,
    0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x69,0x5f,0x72,
    0x61,0x64,0x69,0x75,0x73,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x0a,0x76,0x61,
    0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x67,0x6c,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,
    0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x20,0x7b,0x0a,0x20,
    0x20,0x76,0x61,0x72,0x20,0x6e,0x64,0x63,0x5f,0x63,0x65,0x6e,0x74,0x65,0x72,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x6e,
    0x64,0x63,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,
    0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x70,0x6f,0x73,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x32,0x66,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x32,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x69,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x3b,0x0a,0x20,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,
    0x78,0x5f,0x31,0x32,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x38,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x20,0x3d,0x20,0x76,0x5f,0x70,0x6f,0x73,
    0x3b,0x0a,0x20,0x20,0x66,0x5f,0x70,0x6f,0x73,0x20,0x3d,0x20,0x78,0x5f,0x31,0x38,
    0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,0x32,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x32,0x66,0x20,0x3d,0x20,0x69,0x5f,0x63,0x65,0x6e,0x74,0x65,0x72,0x3b,
    0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x33,0x30,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x32,0x66,0x20,0x3d,0x20,0x78,0x5f,0x32,0x35,0x2e,0x77,0x6f,0x72,0x6c,0x64,
    0x5f,0x64,0x69,0x6d,0x73,0x3b,0x0a,0x20,0x20,0x6e,0x64,0x63,0x5f,0x63,0x65,0x6e,
    0x74,0x65,0x72,0x20,0x3d,0x20,0x28,0x28,0x28,0x78,0x5f,0x32,0x32,0x20,0x2f,0x20,
    0x78,0x5f,0x33,0x30,0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,0x66,0x29,0x20,0x2d,0x20,
    0x76,0x65,0x63,0x32,0x66,0x28,0x31,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x34,0x30,0x20,0x3a,
    0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x69,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x3b,
    0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x34,0x32,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x32,0x66,0x20,0x3d,0x20,0x78,0x5f,0x32,0x35,0x2e,0x77,0x6f,0x72,0x6c,0x64,
    0x5f,0x64,0x69,0x6d,0x73,0x3b,0x0a,0x20,0x20,0x6e,0x64,0x63,0x5f,0x72,0x61,0x64,
    0x69,0x75,0x73,0x20,0x3d,0x20,0x28,0x28,0x76,0x65,0x63,0x32,0x66,0x28,0x78,0x5f,
    0x34,0x30,0x2c,0x20,0x78,0x5f,0x34,0x30,0x29,0x20,0x2f,0x20,0x78,0x5f,0x34,0x32,
    0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,
    0x20,0x78,0x5f,0x34,0x37,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x20,0x3d,0x20,
    0x6e,0x64,0x63,0x5f,0x63,0x65,0x6e,0x74,0x65,0x72,0x3b,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x34,0x38,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x20,0x3d,
    0x20,0x76,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,
    0x34,0x39,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x20,0x3d,0x20,0x6e,0x64,0x63,
    0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x3b,0x0a,0x20,0x20,0x70,0x6f,0x73,0x20,0x3d,
    0x20,0x28,0x78,0x5f,0x34,0x37,0x20,0x2b,0x20,0x28,0x78,0x5f,0x34,0x38,0x20,0x2a,
    0x20,0x78,0x5f,0x34,0x39,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,
    0x5f,0x35,0x39,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x20,0x3d,0x20,0x70,0x6f,
    0x73,0x3b,0x0a,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x66,0x28,0x78,0x5f,0x35,0x39,0x2e,0x78,0x2c,
    0x20,0x78,0x5f,0x35,0x39,0x2e,0x79,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,
    0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,
    0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x28,0x31,0x29,0x0a,0x20,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,0x0a,0x20,0x20,0x40,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x0a,0x20,0x20,0x66,0x5f,0x70,0x6f,0x73,0x5f,
    0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x2c,0x0a,0x20,0x20,0x40,0x62,0x75,
    0x69,0x6c,0x74,0x69,0x6e,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x29,0x0a,
    0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,
    0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x7d,0x0a,0x0a,0x40,0x76,0x65,0x72,0x74,0x65,
    0x78,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x28,0x40,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x28,0x33,0x29,0x20,0x69,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,0x20,0x40,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x20,0x76,0x5f,0x70,0x6f,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x2c,0x20,
    0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x31,0x29,0x20,0x69,0x5f,0x63,
    0x65,0x6e,0x74,0x65,0x72,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x32,0x66,0x2c,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x32,
    0x29,0x20,0x69,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x20,0x3a,0x20,0x66,0x33,0x32,0x29,0x20,0x2d,0x3e,0x20,0x6d,0x61,0x69,0x6e,0x5f,
    0x6f,0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x69,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x69,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,
    0x0a,0x20,0x20,0x76,0x5f,0x70,0x6f,0x73,0x20,0x3d,0x20,0x76,0x5f,0x70,0x6f,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x69,0x5f,0x63,0x65,0x6e,0x74,
    0x65,0x72,0x20,0x3d,0x20,0x69,0x5f,0x63,0x65,0x6e,0x74,0x65,0x72,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x69,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x20,
    0x3d,0x20,0x69,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x3b,0x0a,0x20,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x3b,0x0a,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x28,
    0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x66,0x5f,0x70,0x6f,0x73,0x2c,0x20,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x00,
];
/*
    diagnostic(off, derivative_uniformity);

    var<private> f_pos : vec2f;

    var<private> color : vec4f;

    var<private> f_color : vec3f;

    fn main_1() {
      let x_10 : vec2f = f_pos;
      if ((length(x_10) > 1.0f)) {
        discard;
      }
      let x_24 : vec3f = f_color;
      color = vec4f(x_24.x, x_24.y, x_24.z, 0.89999997615814208984f);
      return;
    }

    struct main_out {
      @location(0)
      color_1 : vec4f,
    }

    @fragment
    fn main(@location(0) f_pos_param : vec2f, @location(1) f_color_param : vec3f) -> main_out {
      f_pos = f_pos_param;
      f_color = f_color_param;
      main_1();
      return main_out(color);
    }

*/
pub const CIRCLE_FS_SOURCE_WGSL: [u8; 578] = [
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,
    0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x5f,0x70,0x6f,0x73,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x32,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,
    0x65,0x3e,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,
    0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,
    0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,
    0x0a,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x20,0x7b,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x30,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x32,0x66,0x20,0x3d,0x20,0x66,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x69,0x66,
    0x20,0x28,0x28,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x78,0x5f,0x31,0x30,0x29,0x20,
    0x3e,0x20,0x31,0x2e,0x30,0x66,0x29,0x29,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x64,
    0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x7d,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x32,0x34,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,
    0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x66,0x28,0x78,0x5f,0x32,0x34,0x2e,0x78,
    0x2c,0x20,0x78,0x5f,0x32,0x34,0x2e,0x79,0x2c,0x20,0x78,0x5f,0x32,0x34,0x2e,0x7a,
    0x2c,0x20,0x30,0x2e,0x38,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x36,0x31,0x35,0x38,
    0x31,0x34,0x32,0x30,0x38,0x39,0x38,0x34,0x66,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x40,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x0a,0x20,0x20,0x63,0x6f,0x6c,0x6f,
    0x72,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x7d,0x0a,0x0a,
    0x40,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,
    0x6e,0x28,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x20,0x66,
    0x5f,0x70,0x6f,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x32,0x66,0x2c,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x31,0x29,
    0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x33,0x66,0x29,0x20,0x2d,0x3e,0x20,0x6d,0x61,0x69,0x6e,0x5f,
    0x6f,0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x66,0x5f,0x70,0x6f,0x73,0x20,0x3d,0x20,
    0x66,0x5f,0x70,0x6f,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x66,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,
    0x28,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x69,
    0x6e,0x5f,0x6f,0x75,0x74,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x00,
];
pub fn circle_shader_desc(backend: sg::Backend) -> sg::ShaderDesc {
    let mut desc = sg::ShaderDesc::new();
    desc.label = c"circle_shader".as_ptr();
    match backend {
        sg::Backend::Glcore => {
            desc.vertex_func.source = &CIRCLE_VS_SOURCE_GLSL430 as *const _ as *const _;
            desc.vertex_func.entry = c"main".as_ptr();
            desc.fragment_func.source = &CIRCLE_FS_SOURCE_GLSL430 as *const _ as *const _;
            desc.fragment_func.entry = c"main".as_ptr();
            desc.attrs[0].glsl_name = c"v_pos".as_ptr();
            desc.attrs[1].glsl_name = c"i_center".as_ptr();
            desc.attrs[2].glsl_name = c"i_radius".as_ptr();
            desc.attrs[3].glsl_name = c"i_color".as_ptr();
            desc.uniform_blocks[1].stage = sg::ShaderStage::Vertex;
            desc.uniform_blocks[1].layout = sg::UniformLayout::Std140;
            desc.uniform_blocks[1].size = 16;
            desc.uniform_blocks[1].glsl_uniforms[0]._type = sg::UniformType::Float4;
            desc.uniform_blocks[1].glsl_uniforms[0].array_count = 1;
            desc.uniform_blocks[1].glsl_uniforms[0].glsl_name = c"v_params_world".as_ptr();
        },
        sg::Backend::D3d11 => {
            desc.vertex_func.source = &CIRCLE_VS_SOURCE_HLSL5 as *const _ as *const _;
            desc.vertex_func.d3d11_target = c"vs_5_0".as_ptr();
            desc.vertex_func.entry = c"main".as_ptr();
            desc.fragment_func.source = &CIRCLE_FS_SOURCE_HLSL5 as *const _ as *const _;
            desc.fragment_func.d3d11_target = c"ps_5_0".as_ptr();
            desc.fragment_func.entry = c"main".as_ptr();
            desc.attrs[0].hlsl_sem_name = c"TEXCOORD".as_ptr();
            desc.attrs[0].hlsl_sem_index = 0;
            desc.attrs[1].hlsl_sem_name = c"TEXCOORD".as_ptr();
            desc.attrs[1].hlsl_sem_index = 1;
            desc.attrs[2].hlsl_sem_name = c"TEXCOORD".as_ptr();
            desc.attrs[2].hlsl_sem_index = 2;
            desc.attrs[3].hlsl_sem_name = c"TEXCOORD".as_ptr();
            desc.attrs[3].hlsl_sem_index = 3;
            desc.uniform_blocks[1].stage = sg::ShaderStage::Vertex;
            desc.uniform_blocks[1].layout = sg::UniformLayout::Std140;
            desc.uniform_blocks[1].size = 16;
            desc.uniform_blocks[1].hlsl_register_b_n = 0;
        },
        sg::Backend::Wgpu => {
            desc.vertex_func.source = &CIRCLE_VS_SOURCE_WGSL as *const _ as *const _;
            desc.vertex_func.entry = c"main".as_ptr();
            desc.fragment_func.source = &CIRCLE_FS_SOURCE_WGSL as *const _ as *const _;
            desc.fragment_func.entry = c"main".as_ptr();
            desc.uniform_blocks[1].stage = sg::ShaderStage::Vertex;
            desc.uniform_blocks[1].layout = sg::UniformLayout::Std140;
            desc.uniform_blocks[1].size = 16;
            desc.uniform_blocks[1].wgsl_group0_binding_n = 0;
        },
        _ => {},
    }
    desc
}
